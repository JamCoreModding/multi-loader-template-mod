plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    {{#if unified_publishing}}
    id "me.shedaniel.unified-publishing"
    {{/if}}
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

base {
    archivesName = "{{mod_id}}-neoforge"
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

repositories {
    maven {
        name = "NeoForge"
        url = "https://maven.neoforged.net"
    }
}

dependencies {
    neoForge libs.neoforge
    modImplementation libs.architectury.neoforge
    modImplementation libs.jamlib.neoforge

    // Dependency of JamLib
    forgeRuntimeLibrary "blue.endless:jankson:1.2.3"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}
{{#if unified_publishing}}

if (System.getenv("CURSEFORGE_API_KEY") != null && System.getenv("MODRINTH_API_KEY") != null) {
// Uncomment these lines and fill in the IDs when ready to publish :)
//    unifiedPublishing {
//        project {
//            displayName = "V${project.version} (NeoForge ${project.minecraft_version})"
//            changelog = rootProject.file("CHANGELOG.md").text
//            releaseType = project.version.contains("beta") ? "beta" : "release"
//            gameVersions = [project.minecraft_version]
//            gameLoaders = ["neoforge"]
//
//            mainPublication tasks.remapJar
//
//            relations {
//                depends {
//                    curseforge = "architectury-api"
//                    modrinth = "architectury-api"
//                }
//
//                depends {
//                    curseforge = "jamlib"
//                    modrinth = "jamlib"
//                }
//            }
//
//            curseforge {
//                token = System.getenv("CURSEFORGE_API_KEY")
//                id = ""
//            }
//
//            modrinth {
//                token = System.getenv("MODRINTH_API_KEY")
//                id = ""
//            }
//        }
//    }
}
{{/if}}

processResources {
    filesMatching("mods.toml") {
        expand "minecraft_version": project.minecraft_version,
            "architectury_version": libs.versions.architectury.get(),
            "jamlib_version": libs.versions.jamlib.get()
    }

    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "architectury_version", libs.versions.architectury.get()
    inputs.property "jamlib_version", libs.versions.jamlib.get()
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

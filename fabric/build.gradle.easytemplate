plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    {{#if unified_publishing}}
    id "me.shedaniel.unified-publishing"
    {{/if}}
}

architectury {
    platformSetupLoomIde()
    fabric()
}

base {
    archivesName = "{{mod_id}}-fabric"
}

configurations {
    common
    shadowCommon 
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation libs.fabric.loader
    modImplementation libs.fabric.api
    modImplementation libs.architectury.fabric
    modRuntimeOnly libs.modmenu
    modImplementation libs.jamlib.fabric

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}
{{#if unified_publishing}}

if (System.getenv("CURSEFORGE_API_KEY") != null && System.getenv("MODRINTH_API_KEY") != null) {
// Uncomment these lines and fill in the IDs when ready to publish :)
//    unifiedPublishing {
//        project {
//            displayName = "V${project.version} (Fabric ${project.minecraft_version})"
//            changelog = rootProject.file("CHANGELOG.md").text
//            releaseType = project.version.contains("beta") ? "beta" : "release"
//            gameVersions = [project.minecraft_version]
//            gameLoaders = ["fabric"]
//
//            mainPublication tasks.remapJar
//
//            relations {
//                depends {
//                    curseforge = "fabric-api"
//                    modrinth = "fabric-api"
//                }
//
//                depends {
//                    curseforge = "architectury-api"
//                    modrinth = "architectury-api"
//                }
//
//                depends {
//                    curseforge = "jamlib"
//                    modrinth = "jamlib"
//                }
//            }
//
//            curseforge {
//                token = System.getenv("CURSEFORGE_API_KEY")
//                id = ""
//            }
//
//            modrinth {
//                token = System.getenv("MODRINTH_API_KEY")
//                id = ""
//            }
//        }
//    }
}
{{/if}}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
            "minecraft_version": project.minecraft_version,
            "fabric_api_version": libs.versions.fabric.api.get(),
            "architectury_version": libs.versions.architectury.get(),
            "jamlib_version": libs.versions.jamlib.get()
    }

    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "fabric_api_version", libs.versions.fabric.api.get()
    inputs.property "architectury_version", libs.versions.architectury.get()
    inputs.property "jamlib_version", libs.versions.jamlib.get()
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

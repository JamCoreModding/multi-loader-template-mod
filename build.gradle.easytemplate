plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
    {{#if unified_publishing}}
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
    {{/if}}
    {{#if github_publish}}
    id "com.github.breadmoirai.github-release" version "2.4.1"
    {{/if}}
}
{{#if github_publish}}

if (System.getenv("GITHUB_TOKEN") != null) {
    githubRelease {
        token(System.getenv("GITHUB_TOKEN"))
        owner("{{ github_owner }}")
        repo("{{ github_repo }}")
        tagName("${project.version}")
        releaseName("V${project.version}")
        body(project.rootProject.file("CHANGELOG.md").text)
        draft(false)

        if (project.branch != null) {
            targetCommitish(project.branch)
        }
    }
}
{{/if}}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    jar {
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version,
                    'JamLib-File-Name'        : "{{mod_id}}-${project.base.archivesName.get()}-${rootProject.version}.jar",
            ])
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    version = rootProject.version
    group = rootProject.group

    repositories {
        mavenCentral()

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }

        maven {
            name = "Jamalam's Maven"
            url = "https://maven.jamalam.tech/releases"
        }
    }

    base {
        archivesName = "{{mod_id}}"
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    tasks.create("prepareWorkspace") {}

    java {
        withSourcesJar()
    }
    {{#ifCond github_publish '||' unified_publishing}}
    
    tasks.publish {
        {{#if github_publish}}
        dependsOn(":githubRelease")
        {{/if}}
        {{#if unified_publishing}}
        dependsOn("fabric:publishUnified")
        dependsOn("neoforge:publishUnified")
        {{/if}}
    }
    {{/ifCond}}
}
